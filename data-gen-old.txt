
    --- geração manual dos pacotes
    signal address1, data1:  std_logic_vector(15 downto 0);
    signal ce1: std_logic;
    type packet is array (0 to 16) of std_logic_vector(15 downto 0);
	constant pck1 : packet := 
	( x"0022", x"000F", x"1001", x"2002", x"3003", x"4004", x"5005",
	  x"6006", x"7007", x"8008", x"9009", x"A00A",
	  x"B00B", x"C00C", x"D00D", x"E00E", x"F00F"
	);






     -----   geração da dados - está muito ruim  ------
     process(reset, clock(0))          
     begin
          if reset='1' then
               rx(0) <= '0';
          elsif clock(0)'event and clock(0)='1' then

                if ce1='1' and address1=x"FFFF" then
                        rx(0) <= '1';
                        data_in(0) <= data1;
                elsif credit_o(0)='1' then      -- important: flow control
                        rx(0) <= '0';
                end if;
           end if;

     end process;

     address1 <= x"FFFF";   -- address generated by the processor

     credit_i(8) <= '1';    --- no tutorial eu não sinalizava que precisa deixar o receptor apto

    process
        variable i : integer:= 0;
     begin
        ce1 <= '0';
        wait for 400 ns;     -- time between packets

        i := 0;
        while i < 17 loop
         
            if credit_o(0)='1' then    -- important: flow control
                   data1 <= pck1(i);       -- simulate a write( pck(i), address_noc) 
                   ce1  <= '1';
                   wait for 20 ns;
                   ce1  <= '0';
                   wait for 20 ns;
                   i := i + 1;
            else
                   wait for 20 ns;
            end if;
                   
        end loop;
        
      end process;
